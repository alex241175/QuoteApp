@using Blazored.TextEditor
@using Chinese
@inject DatabaseContext DbContext

<label for="text" class="col-form-label my-2">內容:</label>
<a class="btn btn-light btn-sm mx-2" @onclick="Beautify">整理</a>
<a class="btn btn-light btn-sm mx-2" @onclick="ConvertTraditional">繁</a>
<a class="btn btn-light btn-sm mx-2" @onclick="OpenQuoteLink">插入語錄</a>

<BlazoredTextEditor @ref="@QuillHtml" Placeholder="" Theme="bubble">
    <ToolbarContent>
        <select class="ql-header">
            <option selected=""></option>
            <option value="1"></option>
            <option value="2"></option>
            <option value="3"></option>
            <option value="4"></option>
            <option value="5"></option>
        </select>
        <span class="ql-formats">
            <button class="ql-bold"></button>
            <button class="ql-italic"></button>
            <button class="ql-underline"></button>
            <button class="ql-strike"></button>
        </span>
        <span class="ql-formats">
            <select class="ql-color"></select>
            <select class="ql-background"></select>
        </span>
        <span class="ql-formats">
            <button class="ql-list" value="ordered"></button>
            <button class="ql-list" value="bullet"></button>
        </span>
        <span class="ql-formats">
            <button class="ql-link"></button>
        </span>
    </ToolbarContent>
    <EditorContent></EditorContent>
</BlazoredTextEditor>

<HxModal @ref="quoteLinkModal" Size="ModalSize.Large" Fullscreen="ModalFullscreen.MediumDown" Title="插入語錄">
	    <BodyTemplate>
        <HxAutosuggest Label=""
                    Placeholder="請輸入語錄標題"
                    TItem="Quote"
                    TValue="int"
                    MinimumLength="1"
                    @bind-Value="@autosuggestValue"
                    DataProvider="ProvideSuggestions"
                    ValueSelector="(Quote q) => q.QuoteId"
                    TextSelector="(Quote q) => q.Title"
                    ItemFromValueResolver="ResolveAutosuggestItemFromValue">
                    <ItemTemplate Context="item">@item.Title <sup>@item.QuoteId</sup></ItemTemplate>
                    <EmptyTemplate>
                        <span class="p-2">找不到語錄標題</span>
                    </EmptyTemplate>
        </HxAutosuggest>
        <HxButton Text="Insert" OnClick="InsertQuoteLink" Color="ThemeColor.Primary" />
	</BodyTemplate>
</HxModal>


@code {

    BlazoredTextEditor QuillHtml;
    private HxModal quoteLinkModal;
    private int autosuggestValue { get; set; }



    public async Task<string> GetHTML()
    {
        return await this.QuillHtml.GetHTML();
    }

    public async void SetHTML(string text)
    {       
        await this.QuillHtml.LoadHTMLContent(text);
        StateHasChanged();
    }

    private async Task Beautify()
	{
		string text = await this.QuillHtml.GetHTML();
        text = text.Replace(",","，").Replace(";","；").Replace(":","：");  // 標點輔全型
        await this.QuillHtml.LoadHTMLContent(text);
	}

     private async Task ConvertTraditional()
	{
		string text = await this.QuillHtml.GetHTML();
        text = ChineseConverter.ToTraditional(text);
        await this.QuillHtml.LoadHTMLContent(text);
	}
    private async Task OpenQuoteLink()
	{
		await quoteLinkModal.ShowAsync();
	}
    private async Task CloseQuoteLink()
	{
		await quoteLinkModal.HideAsync();
	}

    private async Task<AutosuggestDataProviderResult<Quote>> ProvideSuggestions(AutosuggestDataProviderRequest request)
	{
		await Task.Delay(400); // backend API speed simulation
		return new AutosuggestDataProviderResult<Quote>
		{
			Data =  DbContext.Quotes
				    .Where(q => q.Title.Contains(request.UserInput))
					.OrderBy(q => q.Title).ToList()
		};
	}

	private async Task<Quote> ResolveAutosuggestItemFromValue(int value)
	{
		await Task.Delay(400); // backend API speed simulation
		return await DbContext.Quotes.FindAsync(value);
	}
    private async Task InsertQuoteLink()
	{
		var QuoteId = autosuggestValue;
        var quote = DbContext.Quotes.FirstOrDefault(x => x.QuoteId == QuoteId);
        string link = $" [{quote?.Title}](https://thequoteapp.azurewebsites.net/view/{QuoteId}) ";
        await quoteLinkModal.HideAsync();
        autosuggestValue = 0;
        await this.QuillHtml.InsertText(link);
        StateHasChanged();
	}

}